Три части:
- imag-resize - читает очередь в фоне и делает уменьшенную копию изображения 64-64
- front - vue3 фронт магазина и админ-панели
- server - node + express Работа с Azure Table / Blob / Qeueue 

Запуск всего сразу из корневой директории:
npm run start

Инсталл всего сразу из корневой директории:
npm run install-all

Локальные параметры - в переменных окружения env

imega-resize .env:
AZURE_STORAGE_CONNECTION_STRING = "UseDevelopmentStorage=true"
AZURE_ACCOUNT_NAME = "devstoreaccount1"
AZURE_ACCOUNT_KEY  = "Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
AZURE_TABLE_POINT  = "http://localhost:10002/devstoreaccount1"
AZURE_BLOB_POINT   = "http://localhost:10000/devstoreaccount1"
AZURE_QUEUE_POINT  = "http://localhost:10001/devstoreaccount1"
CONTAINER_NAME = "product"
TABLE_NAME_PRODUCT = "product"
NAME_QUEUE = "resizeimage"

front .env:
VUE_APP_API_URL='http://127.0.0.1:3000'

server .env:
AZURE_STORAGE_CONNECTION_STRING = "UseDevelopmentStorage=true"
AZURE_ACCOUNT_NAME = "devstoreaccount1"
AZURE_ACCOUNT_KEY  = "Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
AZURE_TABLE_POINT  = "http://localhost:10002/devstoreaccount1"
AZURE_BLOB_POINT   = "http://localhost:10000/devstoreaccount1"
AZURE_QUEUE_POINT  = "http://localhost:10001/devstoreaccount1"

#// 2 tables  category  // product
TABLE_NAME_CATEGORY = "cat"
#
# PartitionKey - 'category'  тчоб хранились в одном разделе/серввере
# RowKey: "electronics"
# Name: "Electronics for YOU"
# ParentCategory: "None"  // "electronics"
#
TABLE_NAME_PRODUCT = "product"
#
#PartitionKey: "Laptop"   // ключ категории товара (категория может иметь родительскую, а может нет(она сама родительская))
#RowKey: "Laptop123"           // Уникальный ID товара
#Name: "Gaming Laptop". // название товара
#Price: "1500"
#ImageURL: "http://.../laptop123.jpg"
#ThumbnailURL: "http://.../laptop123_thumb.jpg"
#ParentCategoryKey: "Electronics" // Основная категория, куда входит категория товара либо null если категория товара не имеет родительской
#
CONTAINER_NAME = "product"
# url emulator
BASE_BLOB_URL = "http://localhost:10000/devstoreaccount1"
NAME_QUEUE = "resizeimage"

# ---------------------------------------------------------------

# Домашне завдання №2
Дата виконання - до 24го листопада
## Mandatory assignment
Create an online shop emulator.
Admin panel emulator:
- Create a web application with .NET 6 using C# as a programming language.
- Allow to manage (create, edit, delete) goods categories. Each category contains a name and parent category. Categories need to be stored in Azure Table Storage.
- Allow to manage (create, edit, delete) goods. Each good contains a name, price, category, image and thumbnail. Goods need to be stored in Azure Table Storage. Images and thumbnails should be stored in Azure Blob Storage.
Storefront emulator:
- Create a web application with .NET 6 using C# as a programming language.
- On each page, the user should be able to see the tree of categories.
- The category page should contain the list of goods from the current category and all child categories. For each item, page should show thumbnail, name, price.
- The good page should show the image, name, price.
Image converter:
- Create a console application with .NET 6 using C# as a programming language.
- Each time the image of good changes, the admin panel should send a message to the queue.
- Image converter should monitor the queue, get the image, convert it to 64*64 pixels thumbnail and update the good with the thumbnail.
## Optional assignment 1
Automated tests created for emulators with .NET 6 using C# as a programming language. The code coverage level is at least 30% of branches (more coverage is better).

## Assessment priorities (from high to low)
- Functional requirements
- Non-functional requirements
        - Maintainability
        - Testability
        - Resiliency

